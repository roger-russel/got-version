version: 2

workflows:
  version: 2
  release:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only:
                - master


jobs:
  test:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/roger-russel/got-version
    steps:
      - checkout
#      - run:
#        name: Codeclimate
#        command: |
#          npm install -g codeclimate-test-reporter

      - run:
        name: Installing Dep
        command: |
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh

      - restore_cache:
          key: dependency-cache-{{ checksum "Gopkg.toml" }}

      - run:
        name: Installing Dependencies
        command: |
          make packages

      - save_cache:
          key: dependency-cache-{{ checksum "Gopkg.toml" }}
          paths:
            - vendor
            - Gopkg.lock

      - run:
        name: Running Tests
        command: |
          make test

      - run:
        name: Sending Covarege Report
        command: |
          bash <(curl -s https://codecov.io/bash)
#          codeclimate-test-reporter < coverage.txt

      - persist_to_workspace:
          root: /go/src/github.com/roger-russel
          paths:
            - got-version

#  build:
#    docker:
#      - image: circleci/golang:1.10
#    steps:
#      - attach_workspace:
#        at: /go/src/github.com/roger-russel
#
#      - run:
#        name: Building All Packages
#        command: |
#          ./deploy/build-all.bash
#
#      - persist_to_workspace:
#          root: /go/src/github.com/roger-russel
#          paths:
#            - got-version
#
#  deploy:
#    docker:
#      - image: cibuilds/github:0.10
#    steps:
#      - attach_workspace:
#        at: /go/src/github.com/roger-russel
#      - run:
#        name: "Publish Release on Github"
#        command: |
#          VERSION=v.0.0.1
#          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./release/'
#
